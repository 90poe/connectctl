version: 2.1

jobs:
  buildtest:
    docker:
      - image: circleci/golang:1.13.1
    steps:
      - checkout
      - run: make ci
      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  release:
    docker:
      - image: circleci/golang:1.13.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-{{ checksum "go.sum" }}
      - run: make release
  docs-build:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r docs/requirements.txt
      - run:
          name: Build docs
          command: cd docs/ && make html
      - persist_to_workspace:
          root: docs/_build
          paths: html
  docs-deploy:
    docker:
      - image: node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: docs/_build
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g gh-pages@2.1.1
            git config user.email "ci-build@90poe.io"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "b2:1b:aa:03:24:de:cd:aa:aa:0d:f6:ad:be:c9:85:19"
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --dotfiles --message "chore - docs published to GitHub Pages" --dist docs/_build/html
  add-tag:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run:
          name: Pushing git tag
          command: |
            if [[ $(echo ${CIRCLE_BRANCH}) == "master" ]]
            then
                LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
                echo "Latest tag : ${LATEST_TAG}"

                NEW_TAG=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
                echo "Newest tag : ${NEW_TAG}"

                if [[ "v${LATEST_TAG}" == "v${NEW_TAG}" ]]
                then
                  echo "Tag ${NEW_TAG} already exists."
                else
                  git config --global user.name "90POE"
                  git config --global user.email "bot@90poe.io"
                  git tag -a ${NEW_TAG} -m "Updated master tag with tag version ${NEW_TAG}"
                  git push -u origin ${NEW_TAG}
                  echo "Updated the master tag with tag version ${NEW_TAG}."
                fi
            fi
workflows:
  version: 2
  any-commit:
    jobs:
      - buildtest:
          filters:
            tags:
              ignore: /.*/
      - docs-build:
          filters:
            tags:
              ignore: /.*/
      - add-tag
  release:
    jobs:
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - docs-build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - docs-deploy:
          requires:
            - release
            - docs-build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
